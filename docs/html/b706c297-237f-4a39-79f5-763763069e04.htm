<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>mpfr_lib.mpfr_get_str Method (char_ptr, ptr(mpfr_exp_t), Int32, size_t, mpfr_t, mpfr_rnd_t)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Math.Mpfr.Native.mpfr_lib.mpfr_get_str(Math.Gmp.Native.char_ptr,Math.Gmp.Native.ptr{Math.Mpfr.Native.mpfr_exp_t},System.Int32,Math.Gmp.Native.size_t,Math.Mpfr.Native.mpfr_t,Math.Mpfr.Native.mpfr_rnd_t)" /><meta name="Description" content="Convert to a string of digits in base , with rounding in the direction , where is either zero (see below) or the number of significant digits output in the string; in the latter case, must be greater or equal to 2." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Math.Mpfr.Native" /><meta name="file" content="b706c297-237f-4a39-79f5-763763069e04" /><meta name="guid" content="b706c297-237f-4a39-79f5-763763069e04" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">MPFR Native Interface for .NET<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="846f5c8a-6cba-433e-9f18-cde2ff5695cd.htm" title="MPFR Native Interface for .NET" tocid="roottoc">MPFR Native Interface for .NET</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d4b41450-8301-1af6-67c3-6d6f7e206516.htm" title="Math.Mpfr.Native" tocid="d4b41450-8301-1af6-67c3-6d6f7e206516">Math.Mpfr.Native</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm" title="mpfr_lib Class" tocid="6146e71f-a352-2e48-f234-6d79ad0f8c3c">mpfr_lib Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a7a80831-af71-f620-cdb0-ffff5b5d9dbb.htm" title="mpfr_lib Methods" tocid="a7a80831-af71-f620-cdb0-ffff5b5d9dbb">mpfr_lib Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2bcb1ed1-5c28-d901-976d-68070ef8eb8b.htm" title="mpfr_get_str Method " tocid="2bcb1ed1-5c28-d901-976d-68070ef8eb8b">mpfr_get_str Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="b706c297-237f-4a39-79f5-763763069e04.htm" title="mpfr_get_str Method (char_ptr, ptr(mpfr_exp_t), Int32, size_t, mpfr_t, mpfr_rnd_t)" tocid="b706c297-237f-4a39-79f5-763763069e04">mpfr_get_str Method (char_ptr, ptr(mpfr_exp_t), Int32, size_t, mpfr_t, mpfr_rnd_t)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="2408892b-5aea-259c-00be-b1a44fa53c1f.htm" title="mpfr_get_str Method (char_ptr, mpfr_exp_t, Int32, size_t, mpfr_t, mpfr_rnd_t)" tocid="2408892b-5aea-259c-00be-b1a44fa53c1f">mpfr_get_str Method (char_ptr, mpfr_exp_t, Int32, size_t, mpfr_t, mpfr_rnd_t)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">mpfr_lib<span id="LSTE8ADD562_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_0?cpp=::|nu=.");</script>mpfr_get_str Method (char_ptr, ptr<span id="LSTE8ADD562_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>mpfr_exp_t<span id="LSTE8ADD562_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, size_t, mpfr_t, mpfr_rnd_t)</td></tr></table><span class="introStyle"></span> <div class="summary">
            Convert <span class="parameter">op</span> to a string of digits in base <span class="parameter">b</span>, with rounding in the direction <span class="parameter">rnd</span>, where <span class="parameter">n</span> is either zero (see below) or the number of significant digits output in the string; in the latter case, <span class="parameter">n</span> must be greater or equal to 2. 
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="d4b41450-8301-1af6-67c3-6d6f7e206516.htm">Math.Mpfr.Native</a><br />
    <strong>Assembly:</strong>
   Math.Mpfr.Native (in Math.Mpfr.Native.dll) Version: 1.0.0.0 (1.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">char_ptr</span> <span class="identifier">mpfr_get_str</span>(
	<span class="identifier">char_ptr</span> <span class="parameter">str</span>,
	<span class="identifier">ptr</span>&lt;<span class="identifier">mpfr_exp_t</span>&gt; <span class="parameter">expptr</span>,
	<span class="identifier">int</span> <span class="parameter">b</span>,
	<span class="identifier">size_t</span> <span class="parameter">n</span>,
	<span class="identifier">mpfr_t</span> <span class="parameter">op</span>,
	<span class="identifier">mpfr_rnd_t</span> <span class="parameter">rnd</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">mpfr_get_str</span> ( 
	<span class="parameter">str</span> <span class="keyword">As</span> <span class="identifier">char_ptr</span>,
	<span class="parameter">expptr</span> <span class="keyword">As</span> <span class="identifier">ptr</span>(<span class="keyword">Of</span> <span class="identifier">mpfr_exp_t</span>),
	<span class="parameter">b</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">n</span> <span class="keyword">As</span> <span class="identifier">size_t</span>,
	<span class="parameter">op</span> <span class="keyword">As</span> <span class="identifier">mpfr_t</span>,
	<span class="parameter">rnd</span> <span class="keyword">As</span> <span class="identifier">mpfr_rnd_t</span>
) <span class="keyword">As</span> <span class="identifier">char_ptr</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">char_ptr</span> <span class="identifier">mpfr_get_str</span>(
	<span class="identifier">char_ptr</span> <span class="parameter">str</span>, 
	<span class="identifier">ptr</span>&lt;<span class="identifier">mpfr_exp_t</span>&gt;^ <span class="parameter">expptr</span>, 
	<span class="identifier">int</span> <span class="parameter">b</span>, 
	<span class="identifier">size_t</span> <span class="parameter">n</span>, 
	<span class="identifier">mpfr_t</span>^ <span class="parameter">op</span>, 
	<span class="identifier">mpfr_rnd_t</span> <span class="parameter">rnd</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">mpfr_get_str</span> : 
        <span class="parameter">str</span> : <span class="identifier">char_ptr</span> * 
        <span class="parameter">expptr</span> : <span class="identifier">ptr</span>&lt;<span class="identifier">mpfr_exp_t</span>&gt; * 
        <span class="parameter">b</span> : <span class="identifier">int</span> * 
        <span class="parameter">n</span> : <span class="identifier">size_t</span> * 
        <span class="parameter">op</span> : <span class="identifier">mpfr_t</span> * 
        <span class="parameter">rnd</span> : <span class="identifier">mpfr_rnd_t</span> <span class="keyword">-&gt;</span> <span class="identifier">char_ptr</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">str</span></dt><dd>Type: <a href="06249483-9daf-95f9-32c7-30195550bbcc.htm">Math.Gmp.Native<span id="LSTE8ADD562_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>char_ptr</a><br />The result string.</dd><dt><span class="parameter">expptr</span></dt><dd>Type: <a href="542faa00-d28a-72a2-2dd8-6c6021e683ce.htm">Math.Gmp.Native<span id="LSTE8ADD562_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ptr</a><span id="LSTE8ADD562_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="4fb31d6c-ce9a-372e-8a66-40570e3ff922.htm">mpfr_exp_t</a><span id="LSTE8ADD562_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />The returned exponent.</dd><dt><span class="parameter">b</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LSTE8ADD562_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The base.</dd><dt><span class="parameter">n</span></dt><dd>Type: <a href="d9761bfb-1882-59d2-e89b-c6460141f9a6.htm">Math.Gmp.Native<span id="LSTE8ADD562_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>size_t</a><br />The number of digits in the result string.</dd><dt><span class="parameter">op</span></dt><dd>Type: <a href="0b5248b5-b205-46b1-13fd-9f42922b22bd.htm">Math.Mpfr.Native<span id="LSTE8ADD562_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>mpfr_t</a><br />The operand floating-point number.</dd><dt><span class="parameter">rnd</span></dt><dd>Type: <a href="3a4a909f-0c87-700e-42d0-7159d6a6bf37.htm">Math.Mpfr.Native<span id="LSTE8ADD562_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE8ADD562_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>mpfr_rnd_t</a><br />The rounding direction.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="06249483-9daf-95f9-32c7-30195550bbcc.htm">char_ptr</a><br />Return the converted string of digits.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            The base may vary from 2 to 62; otherwise the function does nothing and immediately returns a null pointer.
            </p><p>
            If the input is NaN, then the returned string is ‘@NaN@’ and the NaN flag is set.
            If the input is +Inf (resp. −Inf), then the returned string is ‘@Inf@’ (resp. ‘-@Inf@’).
            </p><p>
            If the input number is a finite number, the exponent is written through the pointer <span class="parameter">expptr</span>
            (for input 0, the current minimal exponent is written); the type <a href="4fb31d6c-ce9a-372e-8a66-40570e3ff922.htm">mpfr_exp_t</a> is large enough to hold the exponent in all cases.
            </p><p>
            The generated string is a fraction, with an implicit radix point immediately to the left of the first digit.
            For example, the number -3.1416 would be returned as "-31416" in the string and 1 written at <span class="parameter">expptr</span>.
            If <span class="parameter">rnd</span> is to nearest, and <span class="parameter">op</span> is exactly in the middle of two consecutive possible outputs,
            the one with an even significand is chosen, where both significands are considered with the exponent of <span class="parameter">op</span>.
            Note that for an odd base, this may not correspond to an even last digit: for example with 2 digits in base 7, (14) and a half is rounded to (15) which is 12 in decimal,
            (16) and a half is rounded to (20) which is 14 in decimal, and (26) and a half is rounded to (26) which is 20 in decimal. 
            </p><p>
            If <span class="parameter">n</span> is zero, the number of digits of the significand is chosen large enough so that re-reading the printed value with the same precision,
            assuming both output and input use rounding to nearest, will recover the original value of <span class="parameter">op</span>.
            More precisely, in most cases, the chosen precision of <span class="parameter">str</span> is the minimal precision m depending only on p = PREC(<span class="parameter">op</span>)
            and <span class="parameter">b</span> that satisfies the above property, i.e., m = 1 + ceil(p * log(2) / log(<span class="parameter">b</span>)), with p replaced by p - 1 if <span class="parameter">b</span>
            is a power of 2, but in some very rare cases, it might be m + 1 (the smallest case for bases up to 62 is when p equals 186564318007 for bases 7 and 49).
            </p><p>
            If <span class="parameter">str</span> is a null pointer, space for the significand is allocated using the allocation function
            (see <a href="http://www.mpfr.org/mpfr-current/mpfr.html#Memory-Handling">GNU MPFR - Memory Handling</a>)
            and a pointer to the string is returned (unless the base is invalid).
            To free the returned string, you must use <a href="f8961e1c-bf2c-262e-89dd-ceab8c64095f.htm">mpfr_free_str</a>. 
            </p><p>
            If <span class="parameter">str</span> is not a null pointer, it should point to a block of storage large enough for the significand.
            A safe block size (sufficient for any value) is max(<span class="parameter">n</span> + 2, 7) if <span class="parameter">n</span> is not zero;
            if <span class="parameter">n</span> is zero, replace it by m + 1, as discussed above. 
            The extra two bytes are for a possible minus sign, and for the terminating null character, and the value 7 accounts
            for -@Inf@ plus the terminating null character.
            The pointer to the string <span class="parameter">str</span> is returned (unless the base is invalid). 
            </p><p>
            Like in usual functions, the inexact flag is set iff the result is inexact.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDAABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','cs','1','4');return false;">C#</a></div><div id="ID0EDAABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','vb','2','4');return false;">VB</a></div><div id="ID0EDAABA_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','cpp','3','4');return false;">C++</a></div><div id="ID0EDAABA_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Create, initialize, and set a new floating-point number to -8.0</span>
mpfr_t op = <span class="highlight-keyword">new</span> mpfr_t();
mpfr_lib.mpfr_init2(op, <span class="highlight-number">64</span>U);
Assert.IsTrue(mpfr_lib.mpfr_set_d(op, <span class="highlight-number">-8.0</span>, mpfr_rnd_t.MPFR_RNDN) == <span class="highlight-number">0</span>);

<span class="highlight-comment">// Assert that the value of op is -8.</span>
ptr&lt;mpfr_exp_t&gt; exp = <span class="highlight-keyword">new</span> ptr&lt;mpfr_exp_t&gt;(<span class="highlight-number">0</span>);
char_ptr <span class="highlight-keyword">value</span> = mpfr_lib.mpfr_get_str(char_ptr.Zero, exp, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>, op, mpfr_rnd_t.MPFR_RNDN);
Assert.IsTrue(<span class="highlight-keyword">value</span>.ToString() == <span class="highlight-literal">"-800000000000000000000"</span>);
Assert.IsTrue(exp.Value == <span class="highlight-number">1</span>);

<span class="highlight-comment">// Release unmanaged memory allocated for op.</span>
mpfr_lib.mpfr_clear(op);
gmp_lib.free(<span class="highlight-keyword">value</span>);</pre></div><div id="ID0EDAABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Create, initialize, and set a new floating-point number to -8.0</span>
<span class="highlight-keyword">Dim</span> op <span class="highlight-keyword">As</span> mpfr_t = <span class="highlight-keyword">New</span> mpfr_t()
mpfr_lib.mpfr_init2(op, <span class="highlight-number">64</span>U)
Assert.IsTrue(mpfr_lib.mpfr_set_d(op, <span class="highlight-number">-8.0</span>, mpfr_rnd_t.MPFR_RNDN) = <span class="highlight-number">0</span>)

<span class="highlight-comment">' Assert that the value of op is -8.</span>
<span class="highlight-keyword">Dim</span> exp <span class="highlight-keyword">As</span> ptr(<span class="highlight-keyword">Of</span> mpfr_exp_t) =  <span class="highlight-keyword">New</span> ptr(<span class="highlight-keyword">Of</span> mpfr_exp_t)(<span class="highlight-number">0</span>)
<span class="highlight-keyword">Dim</span> value <span class="highlight-keyword">As</span> char_ptr = mpfr_lib.mpfr_get_str(char_ptr.Zero, exp, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>, op, mpfr_rnd_t.MPFR_RNDN)
Assert.IsTrue(value.ToString() = <span class="highlight-literal">"-800000000000000000000"</span>)
Assert.IsTrue(exp.Value = <span class="highlight-number">1</span>)

<span class="highlight-comment">' Release unmanaged memory allocated for op.</span>
mpfr_lib.mpfr_clear(op)
gmp_lib.free(value)</pre></div><div id="ID0EDAABA_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="ID0EDAABA_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm">mpfr_lib Class</a></div><div class="seeAlsoStyle"><a href="2bcb1ed1-5c28-d901-976d-68070ef8eb8b.htm">mpfr_get_str Overload</a></div><div class="seeAlsoStyle"><a href="d4b41450-8301-1af6-67c3-6d6f7e206516.htm">Math.Mpfr.Native Namespace</a></div><div class="seeAlsoStyle"><a href="76098f44-48df-7d52-d54b-3035e6865ea1.htm">mpfr_get_flt</a></div><div class="seeAlsoStyle"><a href="8b4ab144-0f0d-cc9a-fd4f-169ea8eec30f.htm">mpfr_get_d</a></div><div class="seeAlsoStyle"><a href="04872bcf-5288-c676-78f7-aacde23c4aa6.htm">mpfr_get_si</a></div><div class="seeAlsoStyle"><a href="955a4b1b-c369-89a4-3e5c-d49ee91c8ebc.htm">mpfr_get_ui</a></div><div class="seeAlsoStyle"><a href="31e70d38-c591-f6dc-a546-a0a6d2bda206.htm">mpfr_get_sj</a></div><div class="seeAlsoStyle"><a href="91d96006-2456-0bc7-1324-98862e959a49.htm">mpfr_get_uj</a></div><div class="seeAlsoStyle"><a href="236ab01a-03a1-15e6-c0bb-d2c5d8b2508d.htm">mpfr_get_d_2exp Overload</a></div><div class="seeAlsoStyle"><a href="8297da78-8d26-2deb-2169-ca6e0ff8f2ef.htm">mpfr_frexp Overload</a></div><div class="seeAlsoStyle"><a href="f09eba35-c284-fcf5-ed9b-cafbe1cefaf8.htm">mpfr_get_z_2exp</a></div><div class="seeAlsoStyle"><a href="7bb119e2-543f-b7f3-ebb6-edfd190a9473.htm">mpfr_get_z</a></div><div class="seeAlsoStyle"><a href="8899a475-c209-b0b0-7197-1673f29da836.htm">mpfr_get_q</a></div><div class="seeAlsoStyle"><a href="0f079904-377a-e25b-6ea6-92199cca5053.htm">mpfr_get_f</a></div><div class="seeAlsoStyle"><a href="2408892b-5aea-259c-00be-b1a44fa53c1f.htm">mpfr_get_str(char_ptr, ref mpfr_exp_t, int, size_t, mpfr_t, mpfr_rnd_t)</a></div><div class="seeAlsoStyle"><a href="f8961e1c-bf2c-262e-89dd-ceab8c64095f.htm">mpfr_free_str</a></div><div class="seeAlsoStyle"><a href="6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm"><a href="/html/6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm#Conversion_Functions">Conversion Functions</a></a></div><div class="seeAlsoStyle"><a href="6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm"><a href="http://www.mpfr.org/mpfr-current/mpfr.html#Conversion-Functions">GNU MPFR - Conversion Functions</a></a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>