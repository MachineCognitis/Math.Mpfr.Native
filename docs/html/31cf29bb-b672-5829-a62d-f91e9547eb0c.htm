<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>mpfr_lib.mpfr_strtofr Method (mpfr_t, char_ptr, char_ptr, Int32, mpfr_rnd_t)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Math.Mpfr.Native.mpfr_lib.mpfr_strtofr(Math.Mpfr.Native.mpfr_t,Math.Gmp.Native.char_ptr,Math.Gmp.Native.char_ptr@,System.Int32,Math.Mpfr.Native.mpfr_rnd_t)" /><meta name="Description" content="Read a floating-point number from a string in base , rounded in the direction ." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Math.Mpfr.Native" /><meta name="file" content="31cf29bb-b672-5829-a62d-f91e9547eb0c" /><meta name="guid" content="31cf29bb-b672-5829-a62d-f91e9547eb0c" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">MPFR Native Interface for .NET<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="846f5c8a-6cba-433e-9f18-cde2ff5695cd.htm" title="MPFR Native Interface for .NET" tocid="roottoc">MPFR Native Interface for .NET</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d4b41450-8301-1af6-67c3-6d6f7e206516.htm" title="Math.Mpfr.Native" tocid="d4b41450-8301-1af6-67c3-6d6f7e206516">Math.Mpfr.Native</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm" title="mpfr_lib Class" tocid="6146e71f-a352-2e48-f234-6d79ad0f8c3c">mpfr_lib Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a7a80831-af71-f620-cdb0-ffff5b5d9dbb.htm" title="mpfr_lib Methods" tocid="a7a80831-af71-f620-cdb0-ffff5b5d9dbb">mpfr_lib Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7c2418df-9a63-3435-9ea8-2fc7381102f5.htm" title="mpfr_strtofr Method " tocid="7c2418df-9a63-3435-9ea8-2fc7381102f5">mpfr_strtofr Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="31cf29bb-b672-5829-a62d-f91e9547eb0c.htm" title="mpfr_strtofr Method (mpfr_t, char_ptr, char_ptr, Int32, mpfr_rnd_t)" tocid="31cf29bb-b672-5829-a62d-f91e9547eb0c">mpfr_strtofr Method (mpfr_t, char_ptr, char_ptr, Int32, mpfr_rnd_t)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="bfabbf6f-686c-2419-eef4-a6d36fce2d15.htm" title="mpfr_strtofr Method (mpfr_t, char_ptr, ptr(char_ptr), Int32, mpfr_rnd_t)" tocid="bfabbf6f-686c-2419-eef4-a6d36fce2d15">mpfr_strtofr Method (mpfr_t, char_ptr, ptr(char_ptr), Int32, mpfr_rnd_t)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">mpfr_lib<span id="LSTBB62FE8A_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBB62FE8A_0?cpp=::|nu=.");</script>mpfr_strtofr Method (mpfr_t, char_ptr, char_ptr<span id="LSTBB62FE8A_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBB62FE8A_1?cpp=%");</script>, Int32, mpfr_rnd_t)</td></tr></table><span class="introStyle"></span> <div class="summary">
            Read a floating-point number from a string <span class="parameter">nptr</span> in base <span class="parameter">base</span>, rounded in the direction <span class="parameter">rnd</span>.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="d4b41450-8301-1af6-67c3-6d6f7e206516.htm">Math.Mpfr.Native</a><br />
    <strong>Assembly:</strong>
   Math.Mpfr.Native (in Math.Mpfr.Native.dll) Version: 1.0.0.0 (1.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">int</span> <span class="identifier">mpfr_strtofr</span>(
	<span class="identifier">mpfr_t</span> <span class="parameter">rop</span>,
	<span class="identifier">char_ptr</span> <span class="parameter">nptr</span>,
	<span class="keyword">ref</span> <span class="identifier">char_ptr</span> <span class="parameter">endptr</span>,
	<span class="identifier">int</span> <span class="parameter">base</span>,
	<span class="identifier">mpfr_rnd_t</span> <span class="parameter">rnd</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">mpfr_strtofr</span> ( 
	<span class="parameter">rop</span> <span class="keyword">As</span> <span class="identifier">mpfr_t</span>,
	<span class="parameter">nptr</span> <span class="keyword">As</span> <span class="identifier">char_ptr</span>,
	<span class="keyword">ByRef</span> <span class="parameter">endptr</span> <span class="keyword">As</span> <span class="identifier">char_ptr</span>,
	<span class="parameter">base</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">rnd</span> <span class="keyword">As</span> <span class="identifier">mpfr_rnd_t</span>
) <span class="keyword">As</span> <span class="identifier">Integer</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">int</span> <span class="identifier">mpfr_strtofr</span>(
	<span class="identifier">mpfr_t</span>^ <span class="parameter">rop</span>, 
	<span class="identifier">char_ptr</span> <span class="parameter">nptr</span>, 
	<span class="identifier">char_ptr</span>% <span class="parameter">endptr</span>, 
	<span class="identifier">int</span> <span class="parameter">base</span>, 
	<span class="identifier">mpfr_rnd_t</span> <span class="parameter">rnd</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">mpfr_strtofr</span> : 
        <span class="parameter">rop</span> : <span class="identifier">mpfr_t</span> * 
        <span class="parameter">nptr</span> : <span class="identifier">char_ptr</span> * 
        <span class="parameter">endptr</span> : <span class="identifier">char_ptr</span> <span class="keyword">byref</span> * 
        <span class="parameter">base</span> : <span class="identifier">int</span> * 
        <span class="parameter">rnd</span> : <span class="identifier">mpfr_rnd_t</span> <span class="keyword">-&gt;</span> <span class="identifier">int</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">rop</span></dt><dd>Type: <a href="0b5248b5-b205-46b1-13fd-9f42922b22bd.htm">Math.Mpfr.Native<span id="LSTBB62FE8A_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBB62FE8A_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>mpfr_t</a><br />The result floating-point number.</dd><dt><span class="parameter">nptr</span></dt><dd>Type: <a href="06249483-9daf-95f9-32c7-30195550bbcc.htm">Math.Gmp.Native<span id="LSTBB62FE8A_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBB62FE8A_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>char_ptr</a><br />String containing a floating-point number.</dd><dt><span class="parameter">endptr</span></dt><dd>Type: <a href="06249483-9daf-95f9-32c7-30195550bbcc.htm">Math.Gmp.Native<span id="LSTBB62FE8A_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBB62FE8A_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>char_ptr</a><span id="LSTBB62FE8A_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBB62FE8A_5?cpp=%");</script><br />On return, points the first character after floating-point number in <span class="parameter">nptr</span>.</dd><dt><span class="parameter">base</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LSTBB62FE8A_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBB62FE8A_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The base.</dd><dt><span class="parameter">rnd</span></dt><dd>Type: <a href="3a4a909f-0c87-700e-42d0-7159d6a6bf37.htm">Math.Mpfr.Native<span id="LSTBB62FE8A_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBB62FE8A_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>mpfr_rnd_t</a><br />The rounding direction.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">Int32</a><br />Return zero, a positive, or a negative value if <span class="parameter">rop</span> is respectively equal to, greater than, or lower than the exact result. See <a href="http://www.mpfr.org/mpfr-current/mpfr.html#Rounding-Modes">GNU MPFR - Rounding Modes</a> for details.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            The <span class="parameter">base</span> must be either 0 (to detect the base, as described below) or a number from 2 to 62 (otherwise the behavior is undefined).
            If <span class="parameter">nptr</span> starts with valid data, the result is stored in <span class="parameter">rop</span> and <span class="parameter">endptr</span> points to the character
            just after the valid data (if <span class="parameter">endptr</span> is not a null pointer); otherwise <span class="parameter">rop</span> is set to zero (for consistency with
            <a href="http://en.cppreference.com/w/c/string/byte/strtof">strtod</a>) and the value of <span class="parameter">nptr</span> is stored in the location referenced
            by <span class="parameter">endptr</span> (if <span class="parameter">endptr</span> is not a null pointer).
            The usual <a href="http://www.mpfr.org/mpfr-current/mpfr.html#Rounding-Modes">ternary value</a> is returned. 
            </p><p>
            Parsing follows the standard C <a href="http://en.cppreference.com/w/c/string/byte/strtof">strtod</a> function with some extensions.
            After optional leading whitespace, one has a subject sequence consisting of an optional sign (+ or -), and either numeric data or special data.
            The subject sequence is defined as the longest initial subsequence of the input string, starting with the first non-whitespace character, that is of the expected form. 
            </p><p>
            The form of numeric data is a non-empty sequence of significand digits with an optional decimal point, and an optional exponent consisting
            of an exponent prefix followed by an optional sign and a non-empty sequence of decimal digits.
            A significand digit is either a decimal digit or a Latin letter (62 possible characters), with A = 10, B = 11, …, Z = 35; case is ignored in
            bases less or equal to 36, in bases larger than 36, a = 36, b = 37, …, z = 61.
            The value of a significand digit must be strictly less than the base.
            The decimal point can be either the one defined by the current locale or the period (the first one is accepted for consistency with the
            C standard and the practice, the second one is accepted to allow the programmer to provide MPFR numbers from strings in a way that does
            not depend on the current locale).
            The exponent prefix can be e or E for bases up to 10, or @ in any base; it indicates a multiplication by a power of the base.
            In bases 2 and 16, the exponent prefix can also be p or P, in which case the exponent, called binary exponent, indicates a multiplication
            by a power of 2 instead of the base (there is a difference only for base 16); in base 16 for example 1p2 represents 4 whereas 1@2 represents 256.
            The value of an exponent is always written in base 10. 
            </p><p>
            If the argument base is 0, then the base is automatically detected as follows.
            If the significand starts with 0b or 0B, base 2 is assumed.
            If the significand starts with 0x or 0X, base 16 is assumed.
            Otherwise base 10 is assumed. 
            </p><p>
            Note: The exponent (if present) must contain at least a digit.
            Otherwise the possible exponent prefix and sign are not part of the number (which ends with the significand).
            Similarly, if 0b, 0B, 0x or 0X is not followed by a binary/hexadecimal digit, then the subject sequence stops at the character 0, thus 0 is read.
            </p><p>
            Special data (for infinities and NaN) can be @inf@ or @nan@(n-char-sequence-opt), and if base ≤ 16, it can also be infinity, inf,
            nan or nan(n-char-sequence-opt), all case insensitive.
            A n-char-sequence-opt is a possibly empty string containing only digits, Latin letters and the underscore (0, 1, 2, …, 9, a, b, …, z, A, B, …, Z, _).
            Note: one has an optional sign for all data, even NaN. 
            For example, -@nAn@(This_Is_Not_17) is a valid representation for NaN in base 17. 
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDAABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','cs','1','4');return false;">C#</a></div><div id="ID0EDAABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','vb','2','4');return false;">VB</a></div><div id="ID0EDAABA_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','cpp','3','4');return false;">C++</a></div><div id="ID0EDAABA_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Create and initialize a new floating-point number rop.</span>
mpfr_t rop = <span class="highlight-keyword">new</span> mpfr_t();
mpfr_lib.mpfr_init2(rop, <span class="highlight-number">64</span>U);

<span class="highlight-comment">// Parse first float in string.</span>
char_ptr nptr = <span class="highlight-keyword">new</span> char_ptr(<span class="highlight-literal">"10.0  20.0"</span>);
char_ptr endptr = <span class="highlight-keyword">new</span> char_ptr();
Assert.IsTrue(mpfr_lib.mpfr_strtofr(rop, nptr, <span class="highlight-keyword">ref</span> endptr, <span class="highlight-number">10</span>, mpfr_rnd_t.MPFR_RNDN) == <span class="highlight-number">0</span>);

<span class="highlight-comment">// Assert that the value of rop is 10.</span>
Assert.IsTrue(mpfr_lib.mpfr_get_d(rop, mpfr_rnd_t.MPFR_RNDN) == <span class="highlight-number">10.0</span>);
Assert.IsTrue(endptr.ToString() == <span class="highlight-literal">"  20.0"</span>);

<span class="highlight-comment">// Release unmanaged memory allocated for rop.</span>
mpfr_lib.mpfr_clear(rop);
gmp_lib.free(nptr);</pre></div><div id="ID0EDAABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Create and initialize a new floating-point number rop.</span>
<span class="highlight-keyword">Dim</span> rop <span class="highlight-keyword">As</span> mpfr_t = <span class="highlight-keyword">New</span> mpfr_t()
mpfr_lib.mpfr_init2(rop, <span class="highlight-number">64</span>U)

<span class="highlight-comment">' Parse first float in string.</span>
<span class="highlight-keyword">Dim</span> nptr <span class="highlight-keyword">As</span> char_ptr = <span class="highlight-keyword">New</span> char_ptr(<span class="highlight-literal">"10.0  20.0"</span>)
<span class="highlight-keyword">Dim</span> endptr <span class="highlight-keyword">As</span> char_ptr = <span class="highlight-keyword">New</span> char_ptr()
Assert.IsTrue(mpfr_lib.mpfr_strtofr(rop,nptr,ref endptr,<span class="highlight-number">10</span>,mpfr_rnd_t.MPFR_RNDN)  =  <span class="highlight-number">0</span>)

<span class="highlight-comment">' Assert that the value of rop is 10.</span>
Assert.IsTrue(mpfr_lib.mpfr_get_d(rop, mpfr_rnd_t.MPFR_RNDN) = <span class="highlight-number">10.0</span>)
Assert.IsTrue(endptr.ToString() = <span class="highlight-literal">"  20.0"</span>)

<span class="highlight-comment">' Release unmanaged memory allocated for rop.</span>
mpfr_lib.mpfr_clear(rop)
gmp_lib.free(nptr)</pre></div><div id="ID0EDAABA_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="ID0EDAABA_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm">mpfr_lib Class</a></div><div class="seeAlsoStyle"><a href="7c2418df-9a63-3435-9ea8-2fc7381102f5.htm">mpfr_strtofr Overload</a></div><div class="seeAlsoStyle"><a href="d4b41450-8301-1af6-67c3-6d6f7e206516.htm">Math.Mpfr.Native Namespace</a></div><div class="seeAlsoStyle"><a href="936cde8e-6e7c-790a-3b64-d46fc0cc8745.htm">mpfr_set</a></div><div class="seeAlsoStyle"><a href="efadcf58-8091-67a8-3ac1-503435f3b120.htm">mpfr_set_ui</a></div><div class="seeAlsoStyle"><a href="6fc4597e-bde7-5f46-10cf-ac6cfee23210.htm">mpfr_set_si</a></div><div class="seeAlsoStyle"><a href="4ec7c891-83e6-ce49-374e-3fabe788d296.htm">mpfr_set_uj</a></div><div class="seeAlsoStyle"><a href="31f89dce-de27-d200-093f-6375e5b70649.htm">mpfr_set_sj</a></div><div class="seeAlsoStyle"><a href="a7461d0f-e15e-2616-bf87-eb155811e3df.htm">mpfr_set_flt</a></div><div class="seeAlsoStyle"><a href="90c33d64-292d-1d0a-e9ed-34f7e4c1f1d6.htm">mpfr_set_d</a></div><div class="seeAlsoStyle"><a href="984ab1a1-cf05-b46b-6216-004b82cd1090.htm">mpfr_set_z</a></div><div class="seeAlsoStyle"><a href="03e7d89e-61be-5184-4d8a-27c6de4211de.htm">mpfr_set_q</a></div><div class="seeAlsoStyle"><a href="b06a948d-7faa-590b-c7e4-e342e6155d74.htm">mpfr_set_f</a></div><div class="seeAlsoStyle"><a href="99f8b993-6132-278b-fa61-8bece2addfb5.htm">mpfr_set_ui_2exp</a></div><div class="seeAlsoStyle"><a href="f3ebf40a-02f1-f6a1-1040-4e56f080938d.htm">mpfr_set_si_2exp</a></div><div class="seeAlsoStyle"><a href="d931c0f7-1d17-4efa-7893-ff4db2e8fea6.htm">mpfr_set_uj_2exp</a></div><div class="seeAlsoStyle"><a href="fadb81cb-73cb-e145-12c5-aa06b7632f59.htm">mpfr_set_sj_2exp</a></div><div class="seeAlsoStyle"><a href="d1819e39-298b-89ce-072d-5da32495f9f1.htm">mpfr_set_z_2exp</a></div><div class="seeAlsoStyle"><a href="a7eba29f-9b9a-c03d-6e10-41f1eb28529b.htm">mpfr_set_nan</a></div><div class="seeAlsoStyle"><a href="ea5a2a9b-98e3-a152-d2ea-261bb4538ca2.htm">mpfr_set_inf</a></div><div class="seeAlsoStyle"><a href="cbd492db-0565-fe13-9364-95a875e55b6c.htm">mpfr_set_zero</a></div><div class="seeAlsoStyle"><a href="1392b5ed-e2ba-290e-febe-0e2a45328c4a.htm">mpfr_swap</a></div><div class="seeAlsoStyle"><a href="6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm"><a href="/html/6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm#Assignment_Functions">Assignment Functions</a></a></div><div class="seeAlsoStyle"><a href="6146e71f-a352-2e48-f234-6d79ad0f8c3c.htm"><a href="http://www.mpfr.org/mpfr-current/mpfr.html#Assignment-Functions">GNU MPFR - Assignment Functions</a></a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>